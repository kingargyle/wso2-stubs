<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2133="http://service.keystore.security.carbon.wso2.org/xsd" xmlns:ns="http://service.keystore.security.carbon.wso2.org" xmlns:ax2130="http://security.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" targetNamespace="http://service.keystore.security.carbon.wso2.org">
    <wsdl:documentation>KeyStoreAdminService</wsdl:documentation>
    <wsdl:types>
        <xs:schema xmlns:ax2134="http://service.keystore.security.carbon.wso2.org/xsd" xmlns:ax2132="http://security.carbon.wso2.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.keystore.security.carbon.wso2.org">
            <xs:import namespace="http://security.carbon.wso2.org/xsd" />
            <xs:import namespace="http://service.keystore.security.carbon.wso2.org/xsd" />
            <xs:complexType name="Exception">
                <xs:sequence>
                    <xs:element minOccurs="0" name="Exception" nillable="true" type="xs:anyType" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="SecurityConfigException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="SecurityConfigException" nillable="true" type="ax2132:SecurityConfigException" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="importCertToStore">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="fileData" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getStoreEntries">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getStoreEntriesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKeystoreInfo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKeystoreInfoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2134:KeyStoreData" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKeyStoresResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2134:KeyStoreData" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteStore">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKeyStore">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="fileData" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="filename" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="password" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="type" nillable="true" type="xs:string" />
                        <xs:element minOccurs="0" name="pvtkeyPass" nillable="true" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.keystore.security.carbon.wso2.org/xsd">
            <xs:complexType name="KeyStoreData">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="certs" nillable="true" type="ax2133:CertData" />
                    <xs:element minOccurs="0" name="key" nillable="true" type="ax2133:CertData" />
                    <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="keyStoreType" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="keyValue" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="privateStore" type="xs:boolean" />
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="pubKeyFilePath" nillable="true" type="xs:string" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CertData">
                <xs:sequence>
                    <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="issuerDN" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="notAfter" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="notBefore" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="publicKey" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="serialNumber" nillable="true" type="xs:integer" />
                    <xs:element minOccurs="0" name="subjectDN" nillable="true" type="xs:string" />
                    <xs:element minOccurs="0" name="version" type="xs:int" />
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ax2131="http://service.keystore.security.carbon.wso2.org" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://security.carbon.wso2.org/xsd">
            <xs:import namespace="http://service.keystore.security.carbon.wso2.org" />
            <xs:complexType name="SecurityConfigException">
                <xs:complexContent>
                    <xs:extension base="ns:Exception">
                        <xs:sequence />
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="getStoreEntriesRequest">
        <wsdl:part name="parameters" element="ns:getStoreEntries" />
    </wsdl:message>
    <wsdl:message name="getStoreEntriesResponse">
        <wsdl:part name="parameters" element="ns:getStoreEntriesResponse" />
    </wsdl:message>
    <wsdl:message name="SecurityConfigException">
        <wsdl:part name="parameters" element="ns:SecurityConfigException" />
    </wsdl:message>
    <wsdl:message name="importCertToStoreRequest">
        <wsdl:part name="parameters" element="ns:importCertToStore" />
    </wsdl:message>
    <wsdl:message name="addKeyStoreRequest">
        <wsdl:part name="parameters" element="ns:addKeyStore" />
    </wsdl:message>
    <wsdl:message name="deleteStoreRequest">
        <wsdl:part name="parameters" element="ns:deleteStore" />
    </wsdl:message>
    <wsdl:message name="getKeystoreInfoRequest">
        <wsdl:part name="parameters" element="ns:getKeystoreInfo" />
    </wsdl:message>
    <wsdl:message name="getKeystoreInfoResponse">
        <wsdl:part name="parameters" element="ns:getKeystoreInfoResponse" />
    </wsdl:message>
    <wsdl:message name="getKeyStoresRequest" />
    <wsdl:message name="getKeyStoresResponse">
        <wsdl:part name="parameters" element="ns:getKeyStoresResponse" />
    </wsdl:message>
    <wsdl:portType name="KeyStoreAdminServicePortType">
        <wsdl:operation name="getStoreEntries">
            <wsdl:input message="ns:getStoreEntriesRequest" wsaw:Action="urn:getStoreEntries" />
            <wsdl:output message="ns:getStoreEntriesResponse" wsaw:Action="urn:getStoreEntriesResponse" />
            <wsdl:fault message="ns:SecurityConfigException" name="SecurityConfigException" wsaw:Action="urn:getStoreEntriesSecurityConfigException" />
        </wsdl:operation>
        <wsdl:operation name="importCertToStore">
            <wsdl:input message="ns:importCertToStoreRequest" wsaw:Action="urn:importCertToStore" />
            <wsdl:fault message="ns:SecurityConfigException" name="SecurityConfigException" wsaw:Action="urn:importCertToStoreSecurityConfigException" />
        </wsdl:operation>
        <wsdl:operation name="addKeyStore">
            <wsdl:input message="ns:addKeyStoreRequest" wsaw:Action="urn:addKeyStore" />
            <wsdl:fault message="ns:SecurityConfigException" name="SecurityConfigException" wsaw:Action="urn:addKeyStoreSecurityConfigException" />
        </wsdl:operation>
        <wsdl:operation name="deleteStore">
            <wsdl:input message="ns:deleteStoreRequest" wsaw:Action="urn:deleteStore" />
            <wsdl:fault message="ns:SecurityConfigException" name="SecurityConfigException" wsaw:Action="urn:deleteStoreSecurityConfigException" />
        </wsdl:operation>
        <wsdl:operation name="getKeystoreInfo">
            <wsdl:input message="ns:getKeystoreInfoRequest" wsaw:Action="urn:getKeystoreInfo" />
            <wsdl:output message="ns:getKeystoreInfoResponse" wsaw:Action="urn:getKeystoreInfoResponse" />
            <wsdl:fault message="ns:SecurityConfigException" name="SecurityConfigException" wsaw:Action="urn:getKeystoreInfoSecurityConfigException" />
        </wsdl:operation>
        <wsdl:operation name="getKeyStores">
            <wsdl:input message="ns:getKeyStoresRequest" wsaw:Action="urn:getKeyStores" />
            <wsdl:output message="ns:getKeyStoresResponse" wsaw:Action="urn:getKeyStoresResponse" />
            <wsdl:fault message="ns:SecurityConfigException" name="SecurityConfigException" wsaw:Action="urn:getKeyStoresSecurityConfigException" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="KeyStoreAdminServiceSoap11Binding" type="ns:KeyStoreAdminServicePortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
        <wsdl:operation name="getStoreEntries">
            <soap:operation soapAction="urn:getStoreEntries" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="SecurityConfigException">
                <soap:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="importCertToStore">
            <soap:operation soapAction="urn:importCertToStore" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="SecurityConfigException">
                <soap:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKeyStore">
            <soap:operation soapAction="urn:addKeyStore" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="SecurityConfigException">
                <soap:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteStore">
            <soap:operation soapAction="urn:deleteStore" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="SecurityConfigException">
                <soap:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKeystoreInfo">
            <soap:operation soapAction="urn:getKeystoreInfo" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="SecurityConfigException">
                <soap:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKeyStores">
            <soap:operation soapAction="urn:getKeyStores" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="SecurityConfigException">
                <soap:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="KeyStoreAdminServiceSoap12Binding" type="ns:KeyStoreAdminServicePortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
        <wsdl:operation name="getStoreEntries">
            <soap12:operation soapAction="urn:getStoreEntries" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="SecurityConfigException">
                <soap12:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="importCertToStore">
            <soap12:operation soapAction="urn:importCertToStore" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="SecurityConfigException">
                <soap12:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKeyStore">
            <soap12:operation soapAction="urn:addKeyStore" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="SecurityConfigException">
                <soap12:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteStore">
            <soap12:operation soapAction="urn:deleteStore" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:fault name="SecurityConfigException">
                <soap12:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKeystoreInfo">
            <soap12:operation soapAction="urn:getKeystoreInfo" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="SecurityConfigException">
                <soap12:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKeyStores">
            <soap12:operation soapAction="urn:getKeyStores" style="document" />
            <wsdl:input>
                <soap12:body use="literal" />
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal" />
            </wsdl:output>
            <wsdl:fault name="SecurityConfigException">
                <soap12:fault use="literal" name="SecurityConfigException" />
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="KeyStoreAdminServiceHttpBinding" type="ns:KeyStoreAdminServicePortType">
        <http:binding verb="POST" />
        <wsdl:operation name="getStoreEntries">
            <http:operation location="getStoreEntries" />
            <wsdl:input>
                <mime:content type="text/xml" part="getStoreEntries" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getStoreEntries" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="importCertToStore">
            <http:operation location="importCertToStore" />
            <wsdl:input>
                <mime:content type="text/xml" part="importCertToStore" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="addKeyStore">
            <http:operation location="addKeyStore" />
            <wsdl:input>
                <mime:content type="text/xml" part="addKeyStore" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="deleteStore">
            <http:operation location="deleteStore" />
            <wsdl:input>
                <mime:content type="text/xml" part="deleteStore" />
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getKeystoreInfo">
            <http:operation location="getKeystoreInfo" />
            <wsdl:input>
                <mime:content type="text/xml" part="getKeystoreInfo" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getKeystoreInfo" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getKeyStores">
            <http:operation location="getKeyStores" />
            <wsdl:input>
                <mime:content type="text/xml" part="getKeyStores" />
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getKeyStores" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="KeyStoreAdminService">
        <wsdl:port name="KeyStoreAdminServiceHttpsSoap11Endpoint" binding="ns:KeyStoreAdminServiceSoap11Binding">
            <soap:address location="https://10.100.1.206:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap11Endpoint/" />
        </wsdl:port>
        <wsdl:port name="KeyStoreAdminServiceHttpsSoap12Endpoint" binding="ns:KeyStoreAdminServiceSoap12Binding">
            <soap12:address location="https://10.100.1.206:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap12Endpoint/" />
        </wsdl:port>
        <wsdl:port name="KeyStoreAdminServiceHttpsEndpoint" binding="ns:KeyStoreAdminServiceHttpBinding">
            <http:address location="https://10.100.1.206:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsEndpoint/" />
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>