<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd"
                  xmlns:ns="http://authentication.services.core.carbon.wso2.org"
                  xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"
                  xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  xmlns:ax257="http://core.user.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
                  xmlns:ax254="http://authentication.services.core.carbon.wso2.org/xsd"
                  xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                  targetNamespace="http://authentication.services.core.carbon.wso2.org">
    <wsdl:documentation>AuthenticationAdminService</wsdl:documentation>
    <wsdl:types>
        <xs:schema xmlns:ax258="http://core.user.carbon.wso2.org/xsd"
                   xmlns:ax256="http://authentication.services.core.carbon.wso2.org/xsd"
                   attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://authentication.services.core.carbon.wso2.org">
            <xs:import namespace="http://authentication.services.core.carbon.wso2.org/xsd"/>
            <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
            <xs:complexType name="Exception">
                <xs:sequence>
                    <xs:element minOccurs="0" name="Exception" nillable="true" type="xs:anyType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="AuthenticationException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="AuthenticationException" nillable="true"
                                    type="ax254:AuthenticationException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="loginWithDelegation">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="authenticatedUser" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="remoteAddress" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="loginWithDelegationResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="login">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="remoteAddress" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="loginResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="Exception">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="Exception" nillable="true" type="ns:Exception"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUserPermissions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="realm" nillable="true" type="ax257:UserRealm"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUserPermissionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSystemPermissionOfUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSystemPermissionOfUserResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns:ax255="http://authentication.services.core.carbon.wso2.org" attributeFormDefault="qualified"
                   elementFormDefault="qualified"
                   targetNamespace="http://authentication.services.core.carbon.wso2.org/xsd">
            <xs:import namespace="http://authentication.services.core.carbon.wso2.org"/>
            <xs:complexType name="AuthenticationException">
                <xs:complexContent>
                    <xs:extension base="ax255:Exception">
                        <xs:sequence/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://core.user.carbon.wso2.org/xsd">
            <xs:complexType name="UserRealm">
                <xs:sequence>
                    <xs:element minOccurs="0" name="accessControlAdmin" nillable="true"
                                type="ax257:AccessControlAdmin"/>
                    <xs:element minOccurs="0" name="authenticator" nillable="true" type="ax257:Authenticator"/>
                    <xs:element minOccurs="0" name="authorizer" nillable="true" type="ax257:Authorizer"/>
                    <xs:element minOccurs="0" name="claimsAdmin" nillable="true" type="ax257:UserClaimsAdmin"/>
                    <xs:element minOccurs="0" name="realmConfiguration" nillable="true" type="xs:anyType"/>
                    <xs:element minOccurs="0" name="userProfileAdmin" nillable="true" type="ax257:UserProfileAdmin"/>
                    <xs:element minOccurs="0" name="userStoreAdmin" nillable="true" type="ax257:UserStoreAdmin"/>
                    <xs:element minOccurs="0" name="userStoreReader" nillable="true" type="ax257:UserStoreReader"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AccessControlAdmin">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="Authenticator">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="Authorizer">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="UserClaimsAdmin">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allClaimUris" nillable="true"
                                type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allClaims" nillable="true"
                                type="ax257:Claim"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allRequiredClaims" nillable="true"
                                type="ax257:Claim"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allSupportClaimsByDefault" nillable="true"
                                type="ax257:Claim"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Claim">
                <xs:sequence>
                    <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
                    <xs:element minOccurs="0" name="displayTag" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="required" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="supportedByDefault" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="UserProfileAdmin">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allProfiles" nillable="true"
                                type="ax257:ProfileConfiguration"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ProfileConfiguration">
                <xs:sequence>
                    <xs:element minOccurs="0" name="dialectName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="hiddenClaims" nillable="true" type="xs:anyType"/>
                    <xs:element minOccurs="0" name="inheritedClaims" nillable="true" type="xs:anyType"/>
                    <xs:element minOccurs="0" name="overriddenClaims" nillable="true" type="xs:anyType"/>
                    <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="UserStoreAdmin">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="UserStoreReader">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allProfileNames" nillable="true"
                                type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allRoleNames" nillable="true"
                                type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allUserNames" nillable="true"
                                type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="userPropertyNames" nillable="true"
                                type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="logoutRequest"/>
    <wsdl:message name="AuthenticationException">
        <wsdl:part name="parameters" element="ns:AuthenticationException"/>
    </wsdl:message>
    <wsdl:message name="getUserPermissionsRequest">
        <wsdl:part name="parameters" element="ns:getUserPermissions"/>
    </wsdl:message>
    <wsdl:message name="getUserPermissionsResponse">
        <wsdl:part name="parameters" element="ns:getUserPermissionsResponse"/>
    </wsdl:message>
    <wsdl:message name="Exception">
        <wsdl:part name="parameters" element="ns:Exception"/>
    </wsdl:message>
    <wsdl:message name="loginWithDelegationRequest">
        <wsdl:part name="parameters" element="ns:loginWithDelegation"/>
    </wsdl:message>
    <wsdl:message name="loginWithDelegationResponse">
        <wsdl:part name="parameters" element="ns:loginWithDelegationResponse"/>
    </wsdl:message>
    <wsdl:message name="loginRequest">
        <wsdl:part name="parameters" element="ns:login"/>
    </wsdl:message>
    <wsdl:message name="loginResponse">
        <wsdl:part name="parameters" element="ns:loginResponse"/>
    </wsdl:message>
    <wsdl:message name="getSystemPermissionOfUserRequest">
        <wsdl:part name="parameters" element="ns:getSystemPermissionOfUser"/>
    </wsdl:message>
    <wsdl:message name="getSystemPermissionOfUserResponse">
        <wsdl:part name="parameters" element="ns:getSystemPermissionOfUserResponse"/>
    </wsdl:message>
    <wsdl:portType name="AuthenticationAdminServicePortType">
        <wsdl:operation name="logout">
            <wsdl:input message="ns:logoutRequest" wsaw:Action="urn:logout"/>
            <wsdl:fault message="ns:AuthenticationException" name="AuthenticationException"
                        wsaw:Action="urn:logoutAuthenticationException"/>
        </wsdl:operation>
        <wsdl:operation name="getUserPermissions">
            <wsdl:input message="ns:getUserPermissionsRequest" wsaw:Action="urn:getUserPermissions"/>
            <wsdl:output message="ns:getUserPermissionsResponse" wsaw:Action="urn:getUserPermissionsResponse"/>
            <wsdl:fault message="ns:Exception" name="Exception" wsaw:Action="urn:getUserPermissionsException"/>
        </wsdl:operation>
        <wsdl:operation name="loginWithDelegation">
            <wsdl:input message="ns:loginWithDelegationRequest" wsaw:Action="urn:loginWithDelegation"/>
            <wsdl:output message="ns:loginWithDelegationResponse" wsaw:Action="urn:loginWithDelegationResponse"/>
            <wsdl:fault message="ns:AuthenticationException" name="AuthenticationException"
                        wsaw:Action="urn:loginWithDelegationAuthenticationException"/>
        </wsdl:operation>
        <wsdl:operation name="login">
            <wsdl:input message="ns:loginRequest" wsaw:Action="urn:login"/>
            <wsdl:output message="ns:loginResponse" wsaw:Action="urn:loginResponse"/>
            <wsdl:fault message="ns:AuthenticationException" name="AuthenticationException"
                        wsaw:Action="urn:loginAuthenticationException"/>
        </wsdl:operation>
        <wsdl:operation name="getSystemPermissionOfUser">
            <wsdl:input message="ns:getSystemPermissionOfUserRequest" wsaw:Action="urn:getSystemPermissionOfUser"/>
            <wsdl:output message="ns:getSystemPermissionOfUserResponse"
                         wsaw:Action="urn:getSystemPermissionOfUserResponse"/>
            <wsdl:fault message="ns:Exception" name="Exception" wsaw:Action="urn:getSystemPermissionOfUserException"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="AuthenticationAdminServiceSoap11Binding" type="ns:AuthenticationAdminServicePortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <wsdl:operation name="logout">
            <soap:operation soapAction="urn:logout" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="AuthenticationException">
                <soap:fault use="literal" name="AuthenticationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUserPermissions">
            <soap:operation soapAction="urn:getUserPermissions" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="Exception">
                <soap:fault use="literal" name="Exception"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="loginWithDelegation">
            <soap:operation soapAction="urn:loginWithDelegation" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="AuthenticationException">
                <soap:fault use="literal" name="AuthenticationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="login">
            <soap:operation soapAction="urn:login" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="AuthenticationException">
                <soap:fault use="literal" name="AuthenticationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSystemPermissionOfUser">
            <soap:operation soapAction="urn:getSystemPermissionOfUser" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="Exception">
                <soap:fault use="literal" name="Exception"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="AuthenticationAdminServiceSoap12Binding" type="ns:AuthenticationAdminServicePortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <wsdl:operation name="logout">
            <soap12:operation soapAction="urn:logout" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="AuthenticationException">
                <soap12:fault use="literal" name="AuthenticationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getUserPermissions">
            <soap12:operation soapAction="urn:getUserPermissions" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="Exception">
                <soap12:fault use="literal" name="Exception"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="loginWithDelegation">
            <soap12:operation soapAction="urn:loginWithDelegation" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="AuthenticationException">
                <soap12:fault use="literal" name="AuthenticationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="login">
            <soap12:operation soapAction="urn:login" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="AuthenticationException">
                <soap12:fault use="literal" name="AuthenticationException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSystemPermissionOfUser">
            <soap12:operation soapAction="urn:getSystemPermissionOfUser" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="Exception">
                <soap12:fault use="literal" name="Exception"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="AuthenticationAdminServiceHttpBinding" type="ns:AuthenticationAdminServicePortType">
        <http:binding verb="POST"/>
        <wsdl:operation name="logout">
            <http:operation location="logout"/>
            <wsdl:input>
                <mime:content type="text/xml" part="logout"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getUserPermissions">
            <http:operation location="getUserPermissions"/>
            <wsdl:input>
                <mime:content type="text/xml" part="getUserPermissions"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getUserPermissions"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="loginWithDelegation">
            <http:operation location="loginWithDelegation"/>
            <wsdl:input>
                <mime:content type="text/xml" part="loginWithDelegation"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="loginWithDelegation"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="login">
            <http:operation location="login"/>
            <wsdl:input>
                <mime:content type="text/xml" part="login"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="login"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getSystemPermissionOfUser">
            <http:operation location="getSystemPermissionOfUser"/>
            <wsdl:input>
                <mime:content type="text/xml" part="getSystemPermissionOfUser"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="getSystemPermissionOfUser"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="AuthenticationAdminService">
        <wsdl:port name="AuthenticationAdminServiceHttpsSoap11Endpoint"
                   binding="ns:AuthenticationAdminServiceSoap11Binding">
            <soap:address
                    location="https://127.0.0.1:7443/wsas/services/AuthenticationAdminService.AuthenticationAdminServiceHttpsSoap11Endpoint/"/>
        </wsdl:port>
        <wsdl:port name="AuthenticationAdminServiceHttpsSoap12Endpoint"
                   binding="ns:AuthenticationAdminServiceSoap12Binding">
            <soap12:address
                    location="https://127.0.0.1:7443/wsas/services/AuthenticationAdminService.AuthenticationAdminServiceHttpsSoap12Endpoint/"/>
        </wsdl:port>
        <wsdl:port name="AuthenticationAdminServiceHttpsEndpoint" binding="ns:AuthenticationAdminServiceHttpBinding">
            <http:address
                    location="https://127.0.0.1:7443/wsas/services/AuthenticationAdminService.AuthenticationAdminServiceHttpsEndpoint/"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>